openapi: "3.0.2"
info:
  title: "Issues API"
  description: |
    This API enables raising, commenting and voting on issues.
  version: "1.0"
  termsOfService: "https://issues.tradeface.nl/terms"
  contact:
    name: "Store API"
    url: "https://issues.tradeface.nl/api"
    email: "niels@tradeface.nl"
  license:
    name: "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)"
    url: "https://issues.tradeface.nl/license"
servers:
  - url: https://api.issues.tradeface.nl/v1
    description: Production server

  
paths:
  /product: 
    get:
      summary: "Get a list of suggested products."
      operationId: GetProducts
      description: "Return a list of suggested products."

      tags:
      - product
      parameters:
        - $ref: '#/components/parameters/text'
        - $ref: '#/components/parameters/pagenumber'
        - $ref: '#/components/parameters/pagesize'
        - $ref: '#/components/parameters/filterhost'
      responses:
        '200':
          description: product response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPage'
  /product/{id}:
    get:
      operationId: GetProduct
      description: Returns a product based on it's identifier.

      tags:
      - product
      parameters:
        - name: id
          in: path
          description: Identifier of product to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: product response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: The product does not exists.
  /domain/{id}:
    get:
      operationId: GetDomain
      description: Returns a domain based on it's identifier.

      tags:
      - domain
      parameters:
        - name: id
          in: path
          description: Identifier of domain to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: domain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        '404':
          description: The domain does not exists.
   
 
components:

  parameters:
    text:
      name: text
      in: query
      description: Used to query by name in a list operation.
      schema:
        type: string
        default: ""
    pagenumber:
      name: page[number]
      required: false
      in: query
      description: Used to request the next page in a list operation.
      schema:
          type: integer
          format: int64
          default: 1
    pagesize:
      name: page[size]
      required: false
      in: query
      description: Used to specify the maximum number of records which are returned in the next page.
      schema:
        type: integer
        format: int64
        default: 3
    filterhost:
      name: filter[host]
      required: true
      in: query
      description: host
      schema:
        type: string
  schemas:
    link:
      oneOf:
      - description: a string containing the link's URL
        type: string
        format: uri-reference
      - type: object
        required:
        - href
        properties:
          href:
            description: a string containing the link's URL
            type: string
            format: uri-reference
          meta:
            $ref: '#/components/schemas/meta'
    links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/link'
    meta:
      type: object
      additionalProperties: true
    type:
      type: string
      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
        member is used to describe resource objects that share common attributes and
        relationships.
    id:
      type: string
      description: "Each resource object\u2019s type and id pair MUST [identify](https://jsonapi.org/format/#document-resource-object-identification)\
        \ a single, unique resource."
      # x-go-type: "jsonapi"    
      # x-go-package: "jsonapi"
      # x-oapi-codegen-extra-tags: 
      #   jsonapi: "primary,domain" 
 
    Product:
      description: Product response.
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
        attributes:
          type: object
          properties:            
            description:
              type: string
              description:
                A description of the product, with some background.
       
    ProductPage:
      description: Product page response.
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'

    Domain:
      description: Domain response.
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/type'
        id:
          $ref: '#/components/schemas/id'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
        attributes:
          type: object
          properties:            
            suppliers:
              type: array
              description:
                A description of the domain, with some background.
    